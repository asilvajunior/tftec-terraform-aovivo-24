#--------------------------------------
# Landing Zone Terraform Creation Steps
#--------------------------------------

##Variables:

Windows way:

# the target azure subscription
$env:ARM_SUBSCRIPTION_ID=""

# the name of the resource group where the storage account for the backend should be created
$env:TF_BACKEND_RESOURCE_GROUP="rg-tftec-terraform-tfstate"

# the region where the resource group for the backend should be created
$env:TF_BACKEND_LOCATION="brazilsouth"

# the name of the storage account for the backend
$env:TF_BACKEND_STORAGE_ACCOUNT="tftec24aovivo"

# the name of the storage account container for the backend
$env:TF_BACKEND_CONTAINER="tfstate"

# the name of the storage account container blob for the backend
$env:TF_BACKEND_KEY="tfstate"

# key vault name
$env:KEY_VAULT_NAME="kv-tftec24aovivo"

# Tenant ID
$env:ARM_TENANT_ID="49395d14-0a8b-4fec-a4ff-05f54c7213b7"

# Access key from storage account backend Terraform
$env:ACCESS_KEY=$(az storage account keys list --resource-group $env:TF_BACKEND_RESOURCE_GROUP --account-name $env:TF_BACKEND_STORAGE_ACCOUNT --query "[0].value" --output tsv)

---

#Log in using the device code:
az-login:
	az login --use-device-code

# Create a resource group:
create-rg:
	az group create --name $env:TF_BACKEND_RESOURCE_GROUP --location $env:TF_BACKEND_LOCATION

# Create a storage account:
create-st:
	az storage account create --resource-group $env:TF_BACKEND_RESOURCE_GROUP --name $env:TF_BACKEND_STORAGE_ACCOUNT --sku Standard_LRS --encryption-services blob --location $env:TF_BACKEND_LOCATION

# Create a container blob:
create-container:	
	az storage container create --name $env:TF_BACKEND_CONTAINER --account-name $env:TF_BACKEND_STORAGE_ACCOUNT

# Create a key vault:
create-kv:
	az keyvault create --name $env:KEY_VAULT_NAME --resource-group $env:TF_BACKEND_RESOURCE_GROUP --location $env:TF_BACKEND_LOCATION --enable-rbac-authorization $false

# Ensure access to the key vault:
acesso-kv:
	az keyvault set-policy --name $env:KEY_VAULT_NAME --object-id $env:ARM_CLIENT_ID --secret-permissions get list --key-permissions get list --certificate-permissions get list

#create secrets key for all env vars:
	az keyvault secret set --vault-name $env:KEY_VAULT_NAME --name "TF-BACKEND-STORAGE-ACCOUNT" --value $env:TF_BACKEND_STORAGE_ACCOUNT
	az keyvault secret set --vault-name $env:KEY_VAULT_NAME --name "TF-BACKEND-KEY" --value $env:TF_BACKEND_KEY
	az keyvault secret set --vault-name $env:KEY_VAULT_NAME --name "ARM-TENANT-ID" --value $env:ARM_TENANT_ID
	az keyvault secret set --vault-name $env:KEY_VAULT_NAME --name "ARM-SUBSCRIPTION-ID" --value $env:ARM_SUBSCRIPTION_ID
	az keyvault secret set --vault-name $env:KEY_VAULT_NAME --name "TF-BACKEND-RESOURCE-GROUP" --value $env:TF_BACKEND_RESOURCE_GROUP
	az keyvault secret set --vault-name $env:KEY_VAULT_NAME --name "TF-BACKEND-CONTAINER" --value $env:TF_BACKEND_CONTAINER

#terraform init config:
	terraform init -reconfigure `
  -backend-config "resource_group_name=$env:TF_BACKEND_RESOURCE_GROUP" `
  -backend-config "storage_account_name=$env:TF_BACKEND_STORAGE_ACCOUNT" `
  -backend-config "container_name=$env:TF_BACKEND_CONTAINER" `
  -backend-config "key=$env:TF_BACKEND_KEY" `
  -backend-config "subscription_id=$env:ARM_SUBSCRIPTION_ID" `
  -backend-config "access_key=$env:ACCESS_KEY"
